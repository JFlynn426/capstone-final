// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using content;

namespace content.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190118001105_locationfix")]
    partial class locationfix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Capstone.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Place");

                    b.HasKey("Id");

                    b.ToTable("Place");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Place = "Northeast Photography"
                        },
                        new
                        {
                            Id = -2,
                            Place = "Florida Photography"
                        },
                        new
                        {
                            Id = -3,
                            Place = "Travel/Landscape Photography"
                        });
                });

            modelBuilder.Entity("Capstone.Models.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("LocationId");

                    b.Property<string>("PictureInfo");

                    b.Property<string>("SpeciesName");

                    b.Property<int?>("TagId");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("TagId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("Capstone.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Tags");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Tags = "Hawks/Eagles"
                        },
                        new
                        {
                            Id = -2,
                            Tags = "Owls"
                        },
                        new
                        {
                            Id = -3,
                            Tags = "Small Songbirds"
                        },
                        new
                        {
                            Id = -4,
                            Tags = "Ducks and Waterfowl"
                        },
                        new
                        {
                            Id = -5,
                            Tags = "Larger Misc. Birds"
                        },
                        new
                        {
                            Id = -6,
                            Tags = "Landscape"
                        },
                        new
                        {
                            Id = -7,
                            Tags = "Non-Avian Wildlife"
                        },
                        new
                        {
                            Id = -8,
                            Tags = "Shorebirds"
                        });
                });

            modelBuilder.Entity("Capstone.Models.Picture", b =>
                {
                    b.HasOne("Capstone.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Capstone.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");
                });
#pragma warning restore 612, 618
        }
    }
}
